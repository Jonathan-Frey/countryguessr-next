image: gitlab.lnu.se:5050/1dv025/pipelines/docker-images

stages:
  - build
  - test
  - stage
  - deploy

build:
  stage: build
  variables:
    NEXTAUTH_URL: http://localhost:3000
    DATABASE_URL: mysql://root:secret@mysql:3306/test
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - .next/
      - node_modules/
  except:
    - staging
    - production

test:
  stage: test
  variables:
    MYSQL_DATABASE: test
    MYSQL_ROOT_PASSWORD: secret
    NEXTAUTH_URL: http://localhost:3000
    DATABASE_URL: mysql://root:secret@mysql:3306/test
  services:
    - mysql:latest
  script:
    - npm run test
  dependencies:
    - build
  except:
    - staging
    - production

push stage image:
  stage: stage
  image:
  name: gcr.io/kaniko-project/executor:v1.9.0-debug
  entrypoint: ['']
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/countryguessr-staging:${CI_COMMIT_TAG:-latest}"
  only: staging

stage:
  stage: stage
  script:
    - echo "no staging server set up"
  #   - docker build -t my-app:$CI_COMMIT_REF_SLUG .
  #   - docker tag my-app:$CI_COMMIT_REF_SLUG registry.example.com/my-app:$CI_COMMIT_REF_SLUG
  #   - docker push registry.example.com/my-app:$CI_COMMIT_REF_SLUG
  #   - ssh staging-user@staging-server "docker login registry.example.com && docker pull registry.example.com/my-app:$CI_COMMIT_REF_SLUG && docker run --rm -d my-app:$CI_COMMIT_REF_SLUG"
  # environment:
  #   name: staging
  #   url: http://staging.example.com
  only:
    - staging
  dependencies:
    - push stage image

push production image:
  stage: deploy
  image:
  name: gcr.io/kaniko-project/executor:v1.9.0-debug
  entrypoint: ['']
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/countryguessr:${CI_COMMIT_TAG:-latest}"
  only: production

deploy:
  stage: deploy
  image: alpine:3.19
  before_script:
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - chmod 400 "$PROD_ACCESS_TOKEN"
    - ssh-add "$PROD_ACCESS_TOKEN"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

  script:
    - echo $DO_ACCESS_TOKEN | ssh jf223rf@${PROD_HOST} "docker login -u $DO_EMAIL --password-stdin $REGISTRY_HOST && docker pull ${REGISTRY_HOST}/countryguessr-next:$CI_COMMIT_REF_SLUG && docker run --rm -d countryguessr-next:$CI_COMMIT_REF_SLUG
  environment:
    name: production
    url: $PROD_HOST
  only:
    - production
  dependencies:
    - push production image
