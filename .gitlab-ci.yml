image: gitlab.lnu.se:5050/1dv025/pipelines/docker-images

stages:
  - build
  - test
  - push image
  - stage
  - deploy

build:
  stage: build
  variables:
    NEXTAUTH_URL: http://localhost:3000
    DATABASE_URL: mysql://root:secret@mysql:3306/test
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - .next/
      - node_modules/
  except:
    - staging
    - production

test:
  stage: test
  variables:
    MYSQL_DATABASE: test
    MYSQL_ROOT_PASSWORD: secret
    NEXTAUTH_URL: http://localhost:3000
    DATABASE_URL: mysql://root:secret@mysql:3306/test
  services:
    - mysql:latest
  script:
    - npm run test
  dependencies:
    - build
  except:
    - staging
    - production

push stage image:
  stage: push image
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: ['']
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --build-arg DATABASE_URL=$DATABASE_URL
      --build-arg NEXTAUTH_SECRET=$NEXTAUTH_SECRET
      --build-arg NEXTAUTH_URL=$NEXTAUTH_URL
      --build-arg GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
      --build-arg GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/countryguessr-staging:${CI_COMMIT_TAG:-latest}"
  only:
    - staging

stage:
  stage: stage
  image: alpine:latest
  before_script:
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - chmod 400 "$STAGE_ACCESS_TOKEN"
    - ssh-add "$STAGE_ACCESS_TOKEN"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H ${STAGE_HOST} >> ~/.ssh/known_hosts

  script:
    - ssh ubuntu@$STAGE_HOST "
      docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin <<<$CI_REGISTRY_PASSWORD &&
      docker stop countryguessr-container || true &&
      docker images ${CI_REGISTRY_IMAGE}/countryguessr-staging -q | xargs -r docker rmi &&
      docker run --name countryguessr-container --rm -d -p 3000:3000 ${CI_REGISTRY_IMAGE}/countryguessr-staging:${CI_COMMIT_TAG:-latest}"
  only:
    - staging
  dependencies:
    - push stage image

push production image:
  stage: push image
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: ['']
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --build-arg DATABASE_URL=$DATABASE_URL
      --build-arg NEXTAUTH_SECRET=$NEXTAUTH_SECRET
      --build-arg NEXTAUTH_URL=$NEXTAUTH_URL
      --build-arg GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
      --build-arg GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/countryguessr:${CI_COMMIT_TAG:-latest}"
  only:
    - production

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - chmod 400 "$PROD_ACCESS_TOKEN"
    - ssh-add "$PROD_ACCESS_TOKEN"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H ${PROD_HOST} >> ~/.ssh/known_hosts

  script:
    - ssh jf223rf@$PROD_HOST "
      docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin <<<$CI_REGISTRY_PASSWORD &&
      docker stop countryguessr-container || true &&
      docker images ${CI_REGISTRY_IMAGE}/countryguessr -q | xargs -r docker rmi &&
      docker run --name countryguessr-container --rm -d -p 3000:3000 ${CI_REGISTRY_IMAGE}/countryguessr:${CI_COMMIT_TAG:-latest}"
  environment:
    name: production
    url: $PROD_HOST
  only:
    - production
  dependencies:
    - push production image
